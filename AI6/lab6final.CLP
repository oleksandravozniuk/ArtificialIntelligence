(deffacts the-initial-state
(state 1 2 3 4 0 5))

(defrule mov1
(state ?z1 ?z2 ?z3 ?z4 ?z5 ?z6)
(test (= ?z1 0))
(not (exists (state ?z4 ?z2 ?z3 0 ?z5 ?z6)))
=>
(assert (state ?z4 ?z2 ?z3 0 ?z5 ?z6))
(assert (link ?z1 ?z2 ?z3 ?z4 ?z5 ?z6 to ?z4 ?z2 ?z3 0 ?z5 ?z6)))


(defrule mov2
(state ?z1 ?z2 ?z3 ?z4 ?z5 ?z6)
(test (= ?z1 0))
(not (exists (state ?z2 0 ?z3 ?z4 ?z5 ?z6)))
=>
(assert (state ?z2 0 ?z3 ?z4 ?z5 ?z6))
(assert (link ?z1 ?z2 ?z3 ?z4 ?z5 ?z6 to ?z2 0 ?z3 ?z4 ?z5 ?z6)))

(defrule mov4
(state ?z1 ?z2 ?z3 ?z4 ?z5 ?z6)
(test (= ?z2 0))
(not (exists (state ?z1 ?z3 0 ?z4 ?z5 ?z6)))
=>
(assert (state ?z1 ?z3 0 ?z4 ?z5 ?z6))
(assert (link ?z1 ?z2 ?z3 ?z4 ?z5 ?z6 to ?z1 ?z3 0 ?z4 ?z5 ?z6)))


(defrule mov5
(state ?z1 ?z2 ?z3 ?z4 ?z5 ?z6)
(test (= ?z2 0))
(not (exists (state ?z1 ?z5 ?z3 ?z4 0 ?z6)))
=>
(assert (state ?z1 ?z5 ?z3 ?z4 0 ?z6))
(assert (link ?z1 ?z2 ?z3 ?z4 ?z5 ?z6 to ?z1 ?z5 ?z3 ?z4 0 ?z6)))

(defrule mov3
(state ?z1 ?z2 ?z3 ?z4 ?z5 ?z6)
(test (= ?z2 0))
(not (exists (state 0 ?z1 ?z3 ?z4 ?z5 ?z6)))
=>
(assert (state 0 ?z1 ?z3 ?z4 ?z5 ?z6))
(assert (link ?z1 ?z2 ?z3 ?z4 ?z5 ?z6 to 0 ?z1 ?z3 ?z4 ?z5 ?z6)))




(defrule mov7
(state ?z1 ?z2 ?z3 ?z4 ?z5 ?z6)
(test (= ?z3 0))
(not (exists (state ?z1 ?z2 ?z6 ?z4 ?z5 0)))
=>
(assert (state ?z1 ?z2 ?z6 ?z4 ?z5 0))
(assert (link ?z1 ?z2 ?z3 ?z4 ?z5 ?z6 to ?z1 ?z2 ?z6 ?z4 ?z5 0)))

(defrule mov6
(state ?z1 ?z2 ?z3 ?z4 ?z5 ?z6)
(test (= ?z3 0))
(not (exists (state ?z1 0 ?z2 ?z4 ?z5 ?z6)))
=>
(assert (state ?z1 0 ?z2 ?z4 ?z5 ?z6))
(assert (link ?z1 ?z2 ?z3 ?z4 ?z5 ?z6 to ?z1 0 ?z2 ?z4 ?z5 ?z6)))



(defrule mov8
(state ?z1 ?z2 ?z3 ?z4 ?z5 ?z6)
(test (= ?z4 0))
(not (exists (state ?z1 ?z2 ?z3 ?z5 0 ?z6)))
=>
(assert (state ?z1 ?z2 ?z3 ?z5 0 ?z6))
(assert (link ?z1 ?z2 ?z3 ?z4 ?z5 ?z6 to ?z1 ?z2 ?z3 ?z5 0 ?z6)))

(defrule mov9
(state ?z1 ?z2 ?z3 ?z4 ?z5 ?z6)
(test (= ?z4 0))
(not (exists (state 0 ?z2 ?z3 ?z1 ?z5 ?z6)))
=>
(assert (state 0 ?z2 ?z3 ?z1 ?z5 ?z6))
(assert (link ?z1 ?z2 ?z3 ?z4 ?z5 ?z6 to 0 ?z2 ?z3 ?z1 ?z5 ?z6)))

(defrule mov12
(state ?z1 ?z2 ?z3 ?z4 ?z5 ?z6)
(test (= ?z5 0))
(not (exists (state ?z1 0 ?z3 ?z4 ?z2 ?z6)))
=>
(assert (state ?z1 0 ?z3 ?z4 ?z2 ?z6))
(assert (link ?z1 ?z2 ?z3 ?z4 ?z5 ?z6 to ?z1 0 ?z3 ?z4 ?z2 ?z6)))

(defrule mov10
(state ?z1 ?z2 ?z3 ?z4 ?z5 ?z6)
(test (= ?z5 0))
(not (exists (state ?z1 ?z2 ?z3 0 ?z4 ?z6)))
=>
(assert (state ?z1 ?z2 ?z3 0 ?z4 ?z6))
(assert (link ?z1 ?z2 ?z3 ?z4 ?z5 ?z6 to ?z1 ?z2 ?z3 0 ?z4 ?z6)))

(defrule mov11
(state ?z1 ?z2 ?z3 ?z4 ?z5 ?z6)
(test (= ?z5 0))
(not (exists (state ?z1 ?z2 ?z3 ?z4 ?z6 0)))
=>
(assert (state ?z1 ?z2 ?z3 ?z4 ?z6 0))
(assert (link ?z1 ?z2 ?z3 ?z4 ?z5 ?z6 to ?z1 ?z2 ?z3 ?z4 ?z6 0)))



(defrule mov14
(state ?z1 ?z2 ?z3 ?z4 ?z5 ?z6)
(test (= ?z6 0))
(not (exists (state ?z1 ?z2 ?z3 ?z4 0 ?z5)))
=>
(assert (state ?z1 ?z2 ?z3 ?z4 0 ?z5))
(assert (link ?z1 ?z2 ?z3 ?z4 ?z5 ?z6 to ?z1 ?z2 ?z3 ?z4 0 ?z5)))

(defrule mov13
(state ?z1 ?z2 ?z3 ?z4 ?z5 ?z6)
(test (= ?z6 0))
(not (exists (state ?z1 ?z2 0 ?z4 ?z5 ?z3)))
=>
(assert (state ?z1 ?z2 0 ?z4 ?z5 ?z3))
(assert (link ?z1 ?z2 ?z3 ?z4 ?z5 ?z6 to ?z1 ?z2 0 ?z4 ?z5 ?z3)))


(defrule indirect-path
(path ?x1 ?x2 ?x3 ?x4 ?x5 ?x6 to ?xx1 ?xx2 ?xx3 ?xx4 ?xx5 ?xx6 ?route)
(link ?xx1 ?xx2 ?xx3 ?xx4 ?xx5 ?xx6 to ?xxx1 ?xxx2 ?xxx3 ?xxx4 ?xxx5 ?xxx6)
=>
(assert (path ?x1 ?x2 ?x3 ?x4 ?x5 ?x6 to ?xxx1 ?xxx2 ?xxx3 ?xxx4 ?xxx5 ?xxx6
(str-cat ?route " --> (" ?xxx1 ?xxx2 ?xxx3 ?xxx4 ?xxx5 ?xxx6 ")"))))

(defrule direct-path
(link ?x1 ?x2 ?x3 ?x4 ?x5 ?x6 to ?xx1 ?xx2 ?xx3 ?xx4 ?xx5 ?xx6)
=>
(assert (path ?x1 ?x2 ?x3 ?x4 ?x5 ?x6 to ?xx1 ?xx2 ?xx3 ?xx4 ?xx5 ?xx6
(str-cat "(" ?x1 ?x2 ?x3 ?x4 ?x5 ?x6 ") -->
(" ?xx1 ?xx2 ?xx3 ?xx4 ?xx5 ?xx6 ")"))))




(defrule print-solutions (path 1 2 3 4 0 5 to ?z1 ?z2 5 ?z4 ?z5 3 ?route) =>
(printout t ?route crlf)
(halt))